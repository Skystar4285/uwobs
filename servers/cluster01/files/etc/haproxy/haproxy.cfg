global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	user haproxy
	group haproxy
	daemon

defaults
	log	global
	mode	http
	option	dontlognull
        contimeout 5000
        clitimeout 50000
        srvtimeout 50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

listen appname 0.0.0.0:80
    mode http
    stats enable
    stats uri /haproxy?stats
    stats realm Strictly\ Private
    stats auth opsuser:opsuser
    #stats auth Another_User:passwd
    balance roundrobin
    option httpclose
    option forwardfor
    server cluster01 cluster01:80 check
    server cluster02 cluster02:80 check
    server cluster03 cluster03:80 check
    server cluster04 cluster04:80 check
    server cluster05 cluster05:80 check

listen mqtt
  bind *:1883
  mode tcp
  option tcplog
  balance leastconn
  server mosca_1 172.17.1.96:1882 check

listen ais
  bind *:2102
  mode tcp
  option tcplog
  balance leastconn
  server cluster01 172.17.1.93:2101 check

listen aisbelmullet
  bind *:2103
  mode tcp
  option tcplog
  balance leastconn
  server cluster01 172.17.1.92:9987 check

listen airmarrinville
  bind *:10000
  mode tcp
  option tcplog
  balance leastconn
  server cluster02 172.17.1.93:10001 check

listen airmarrinvilleproxy
  bind *:10001
  mode tcp
  option tcplog
  balance leastconn
  server airmarrinville 10.11.104.5:10000 check

frontend http-in
    bind *:80
    mode http
    option httplog
    option dontlognull
    option forwardfor
    default_backend nginx-cluster
    acl is_erddap hdr_dom(host) -i erddap.dm.marine.ie
    acl is_ctd2cassandra hdr_dom(host) -i ctd2cassandra.dm.marine.ie
    acl is_fluorometer2cassandra hdr_dom(host) -i fluorometer2cassandra.dm.marine.ie
    use_backend erddap if is_erddap
    use_backend ctd2cassandra if is_ctd2cassandra
    use_backend fluorometer2cassandra if is_fluorometer2cassandra
    use_backend pcp_cluster01 if { hdr(Host) -i cluster01.pcp.dm.marine.ie }
    use_backend pcp_cluster02 if { hdr(Host) -i cluster02.pcp.dm.marine.ie }
    use_backend pcp_cluster03 if { hdr(Host) -i cluster03.pcp.dm.marine.ie }
    use_backend pcp_cluster04 if { hdr(Host) -i cluster04.pcp.dm.marine.ie }
    use_backend pcp_cluster05 if { hdr(Host) -i cluster05.pcp.dm.marine.ie }
    use_backend pcp_kafka01 if { hdr(Host) -i kafka01.pcp.dm.marine.ie }
    use_backend pcp_kafka02 if { hdr(Host) -i kafka02.pcp.dm.marine.ie }
    use_backend pcp_kafka03 if { hdr(Host) -i kafka03.pcp.dm.marine.ie }
    use_backend pcp_cassandra01 if { hdr(Host) -i cassandra01.pcp.dm.marine.ie }
    use_backend pcp_cassandra02 if { hdr(Host) -i cassandra02.pcp.dm.marine.ie }
    use_backend pcp_cassandra03 if { hdr(Host) -i cassandra03.pcp.dm.marine.ie }
    use_backend pcp_cassandra04 if { hdr(Host) -i cassandra04.pcp.dm.marine.ie }
    use_backend pcp_cassandra05 if { hdr(Host) -i cassandra05.pcp.dm.marine.ie }
    use_backend pcp_data01 if { hdr(Host) -i data01.pcp.dm.marine.ie }
    use_backend pcp_data02 if { hdr(Host) -i data02.pcp.dm.marine.ie }
    use_backend pcp_data03 if { hdr(Host) -i data03.pcp.dm.marine.ie }
    use_backend pcp_dockerub if { hdr(Host) -i dockerub.pcp.dm.marine.ie }
    use_backend pcp_spidvid if { hdr(Host) -i spidvid.pcp.dm.marine.ie }
    use_backend pcp_gconode01 if { hdr(Host) -i gconode01.pcp.dm.marine.ie }

    use_backend spidvid_audio if { hdr(Host) -i audio.spidvid.dm.marine.ie }

    use_backend vector if { hdr(Host) -i vector.sysadmin.dm.marine.ie }
    use_backend monitoring_dashboard if { hdr(Host) -i dashboard.sysadmin.dm.marine.ie }

    use_backend gconode01_ctd if { hdr(Host) -i ctd.gconode01.dm.marine.ie }
    use_backend gconode01_adcp if { hdr(Host) -i adcp.gconode01.dm.marine.ie }
    use_backend gconode01_fluorometer if { hdr(Host) -i fluorometer.gconode01.dm.marine.ie }
    use_backend gconode01_vemco if { hdr(Host) -i vemco.gconode01.dm.marine.ie }
    use_backend gconode03 if { hdr(Host) -i gconode03.dm.marine.ie }
    use_backend virtuoso if { hdr(Host) -i virtuoso.dm.marine.ie }

    use_backend geonetwork if { hdr(Host) -i geonetwork.dm.marine.ie }
    use_backend geonode if { hdr(Host) -i geonode.dm.marine.ie }

    use_backend ysi2cassandra if { hdr(Host) -i ysi2cassandra.dm.marine.ie }
    use_backend aisrinville12kafka if { hdr(Host) -i aisrinville12kafka.dm.marine.ie }
    use_backend airmarrinville12kafka if { hdr(Host) -i airmarrinville12kafka.dm.marine.ie }
    use_backend ysi2mssql if { hdr(Host) -i ysi2mssql.dm.marine.ie }
    use_backend rundeck if { hdr(Host) -i rundeck.dm.marine.ie }
    use_backend weewx if { hdr(Host) -i weather.dm.marine.ie }
    use_backend mqtthttp if { hdr(Host) -i mqtt.dm.marine.ie }
    use_backend testmqtthttp if { hdr(Host) -i testmqtt.dm.marine.ie }
    use_backend jupyter if { hdr(Host) -i jupyter.dm.marine.ie }
    use_backend sciwms if { hdr(Host) -i sciwms.dm.marine.ie }
    use_backend aisrinville12gpsdjson if { hdr(Host) -i aisrinville12gpsdjson.dm.marine.ie }
    use_backend aisrinville12geojson if { hdr(Host) -i aisrinville12geojson.dm.marine.ie }
    use_backend streamsets if { hdr(Host) -i streamsets.dm.marine.ie }
    use_backend nodered if { hdr(Host) -i node-red.dm.marine.ie }
    use_backend argoerddap if { hdr(Host) -i argoerddap.dm.marine.ie }
    use_backend fixme if { hdr(Host) -i fixme.dm.marine.ie }
    use_backend synology if { hdr(Host) -i synology.dm.marine.ie }

backend nginx-cluster
    balance leastconn
    option httpclose
    cookie JSESSIONID prefix
    server cluster01 172.17.1.92:88 cookie A check
    server cluster02 172.17.1.93:88 cookie A check
    server cluster03 172.17.1.94:88 cookie A check
    server cluster04 172.17.1.95:88 cookie A check
    server cluster05 172.17.1.96:88 cookie A check

backend erddap
    server cluster01 172.17.1.92:8889

backend fluorometer2cassandra 
    server cluster01 172.17.1.92:8083

backend ctd2cassandra 
    server cluster01 172.17.1.92:8082

backend gconode01_ctd
    server gconode01 172.16.255.226:8082
backend spidvid_audio
    server spidvid 172.16.255.19:8196
backend gconode01_adcp
    server gconode01 172.16.255.226:8085
backend gconode01_fluorometer
    server gconode01 172.16.255.226:8083
backend gconode01_vemco
    server gconode01 172.16.255.226:8084

# pcp server backends used by vector
backend pcp_cluster01
    server cluster01 172.17.1.92:44323
backend pcp_cluster02
    server cluster02 172.17.1.93:44323
backend pcp_cluster03
    server cluster03 172.17.1.94:44323
backend pcp_cluster04
    server cluster04 172.17.1.95:44323
backend pcp_cluster05
    server cluster05 172.17.1.96:44323
backend pcp_kafka01
    server kafka01 172.17.1.86:44323
backend pcp_kafka02
    server kafka02 172.17.1.87:44323
backend pcp_kafka03
    server kafka03 172.17.1.88:44323
backend pcp_data01
    server data01 172.17.1.89:44323
backend pcp_data02
    server data02 172.17.1.90:44323
backend pcp_data03
    server data03 172.17.1.91:44323
backend pcp_dockerub
    server dockerub 172.17.1.83:44323
backend pcp_spidvid
    server spidvid 172.16.255.19:44323
backend pcp_gconode01
    server gconode01 172.16.255.226:44323
backend pcp_cassandra01
    server cassandra01 172.17.1.113:44323
backend pcp_cassandra02
    server cassandra02 172.17.1.114:44323
backend pcp_cassandra03
    server cassandra03 172.17.1.115:44323
backend pcp_cassandra04
    server cassandra04 172.17.1.116:44323
backend pcp_cassandra05
    server cassandra05 172.17.1.117:44323

backend vector
    server cluster02 172.17.1.93:8083
backend monitoring_dashboard
    server cluster02 172.17.1.93:8084

backend geonetwork
    server cluster03 172.17.1.94:59280
backend geonode
    server cluster05 172.17.1.96:8111
backend virtuoso
    server cluster04 172.17.1.95:8890

backend ysi2cassandra
    server cluster03 172.17.1.94:8084
backend ysi2mssql
    server cluster03 172.17.1.94:8085
backend rundeck
    server cluster05 172.17.1.96:4440
backend mqtthttp
    server cluster05 172.17.1.96:2288
backend testmqtthttp
    server cluster05 172.17.1.96:2298
backend weewx
    server cluster02 172.17.1.93:49153
backend aisrinville12kafka
    server cluster02 172.17.1.93:8082
backend airmarrinville12kafka
    server cluster02 172.17.1.93:8086
backend jupyter
    server cluster04 172.17.1.95:8891
backend sciwms
    server cluster03 172.17.1.94:7002
backend aisrinville12gpsdjson
    server cluster03 172.17.1.94:8078
backend aisrinville12geojson
    server cluster03 172.17.1.94:8077

backend gconode03
    server gconode03 172.16.255.222:80

backend streamsets
    server streamsets01 172.17.1.123:18630

backend nodered
    server nodered 172.17.1.123:80

backend argoerddap
    server cluster01 172.17.1.92:8080

backend fixme
    server fixme 172.17.1.120:9980

backend synology
    server synology 172.17.1.16:5000
